version: "3.9"

networks:
  com:

services:

  cng-hello-backend:
    image: cng-hello-backend:latest
    ports:
      - "8080:8080"
    environment:
      SERVICE_NAME: "cng-hello-backend"
      PORT: "8080"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "cngdb"
      LOG_LEVEL: "DEBUG"
    networks:
      - com
    depends_on:
      - prometheus
      - jaeger
      - postgres

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cngdb
    networks:
      - com

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - com
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    networks:
      - com
    volumes:
      - grafana-data:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "14250:14250" # Collector gRPC
      - "16686:16686" # Web HTTP
    networks:
      - com
  
  otel_collector:
    image: otel/opentelemetry-collector-contrib:latest
    restart: on-failure
    user: '0:0' # required for logs
    volumes:
      - ./otel-collector.yaml:/etc/otelcol-contrib/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    ports:
        - "4317:4317" # OTLP over gRPC receiver
        - "9464:9464" # Prometheus exporter
    depends_on:
        - jaeger
        - prometheus
    networks:
      - com
